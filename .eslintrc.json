// Start from ESLint v4.16.0
// To get more information of the rules: [http://eslint.org/docs/rules/]()
{
  "env"          : {
    "es6"    : true,
    "node"   : true,
    "browser": true
  },
  "parserOptions": {
    "ecmaVersion": 8
  },
  "rules"        : {
    // Possible Errors
    // -----
    "for-direction"                   : [2],
    "getter-return"                   : [2, {"allowImplicit": false}],
    "no-await-in-loop"                : [2],
    "no-compare-neg-zero"             : [2],
    "no-cond-assign"                  : [2, "always"],
    // Use "fancy-log" ;)
    "no-console"                      : [2],
    "no-constant-condition"           : [2, {"checkLoops": true}],
    "no-control-regex"                : [2],
    "no-debugger"                     : [2],
    "no-dupe-args"                    : [2],
    "no-dupe-keys"                    : [2],
    "no-duplicate-case"               : [2],
    // Write some comments in empty blocks!
    "no-empty"                        : [2, {"allowEmptyCatch": false}],
    "no-empty-character-class"        : [2],
    "no-ex-assign"                    : [2],
    "no-extra-boolean-cast"           : [2],
    "no-extra-parens"                 : [
      1, "all", {
        "conditionalAssign"          : false,
        "returnAssign"               : false,
        "nestedBinaryExpressions"    : true,
        "ignoreJSX"                  : "none",
        "enforceForArrowConditionals": false
      }
    ],
    "no-extra-semi"                   : [2],
    "no-func-assign"                  : [2],
    "no-inner-declarations"           : [2, "both"],
    "no-invalid-regexp"               : [2, {"allowConstructorFlags": ["u", "y"]}],
    "no-irregular-whitespace"         : [
      1, {
        "skipStrings"  : false,
        "skipComments" : false,
        "skipRegExps"  : false,
        "skipTemplates": false
      }
    ],
    "no-obj-calls"                    : [2],
    "no-prototype-builtins"           : [2],
    "no-regex-spaces"                 : [1],
    "no-sparse-arrays"                : [2],
    "no-template-curly-in-string"     : [1],
    "no-unexpected-multiline"         : [2],
    "no-unreachable"                  : [2],
    "no-unsafe-finally"               : [2],
    "no-unsafe-negation"              : [2],
    "use-isnan"                       : [2],
    "valid-jsdoc"                     : [1],
    "valid-typeof"                    : [2, {"requireStringLiterals": true}],
    // Best Practices
    // -----
    "accessor-pairs"                  : [1, {"setWithoutGet": true, "getWithoutSet": false}],
    "array-callback-return"           : [2, {"allowImplicit": false}],
    "block-scoped-var"                : [2],
    // Disable this if using some kind of frameworks.
    "class-methods-use-this"          : [1],
    "complexity"                      : [1, {"max": 20}],
    "consistent-return"               : [2, {"treatUndefinedAsUnspecified": false}],
    "curly"                           : [2],
    // Comment with "// No Default" if in purpose.
    "default-case"                    : [2],
    "dot-location"                    : [2, "property"],
    // Considering the consistency when acquiring object from API.
    "dot-notation"                    : [0],
    "eqeqeq"                          : [2, "allow-null"],
    "guard-for-in"                    : [2],
    "no-alert"                        : [2],
    "no-caller"                       : [2],
    "no-case-declarations"            : [2],
    "no-div-regex"                    : [2],
    "no-else-return"                  : [2, {"allowElseIf": false}],
    "no-empty-function"               : [2, {"allow": []}],
    "no-empty-pattern"                : [2],
    "no-eq-null"                      : [0],
    "no-eval"                         : [2],
    "no-extend-native"                : [2],
    "no-extra-bind"                   : [2],
    "no-extra-label"                  : [2],
    // If intentionally falls through, add a line-comment there.
    "no-fallthrough"                  : [2],
    "no-floating-decimal"             : [2],
    "no-global-assign"                : [2, {"exceptions": []}],
    "no-implicit-coercion"            : [2],
    "no-implicit-globals"             : [2],
    "no-implied-eval"                 : [2],
    "no-invalid-this"                 : [2],
    "no-iterator"                     : [2],
    "no-labels"                       : [2],
    "no-lone-blocks"                  : [2],
    "no-loop-func"                    : [2],
    "no-magic-numbers"                : [1, {"enforceConst": true}],
    "no-multi-spaces"                 : [2, {"exceptions": {"VariableDeclarator": true}}],
    "no-multi-str"                    : [2],
    "no-new"                          : [1],
    "no-new-func"                     : [2],
    "no-new-wrappers"                 : [2],
    "no-octal"                        : [2],
    "no-octal-escape"                 : [2],
    "no-param-reassign"               : [1, {"props": false}],
    "no-proto"                        : [2],
    "no-redeclare"                    : [2, {"builtinGlobals": true}],
    "no-return-assign"                : [2, "always"],
    "no-script-url"                   : [2],
    "no-self-assign"                  : [2],
    "no-self-compare"                 : [2],
    "no-sequences"                    : [2],
    "no-throw-literal"                : [2],
    "no-unused-expressions"           : [2],
    "no-unused-labels"                : [2],
    "no-useless-call"                 : [2],
    "no-useless-concat"               : [2],
    "no-useless-escape"               : [2],
    "no-void"                         : [0],
    "no-warning-comments"             : [1, {"location": "anywhere"}],
    "no-with"                         : [2],
    "radix"                           : [2],
    "require-await"                   : [2],
    "vars-on-top"                     : [2],
    "wrap-iife"                       : [2],
    "yoda"                            : [2, "never", {"exceptRange": true}],
    // Strict Mode
    // -----
    "strict"                          : [2, "global"],
    // Variables
    // -----
    "init-declarations"               : [2, "always"],
    "no-catch-shadow"                 : [2],
    "no-delete-var"                   : [2],
    "no-label-var"                    : [2],
    // Nothing to restrict yet.
    // Syntax is `[2, {"name": "test", "message": "Always put it inside \"describe\""}, ...]`
    // See https://eslint.org/docs/rules/no-restricted-globals
    "no-restricted-globals"           : [2],
    "no-shadow"                       : [1],
    "no-shadow-restricted-names"      : [2],
    "no-undef"                        : [2],
    "no-undef-init"                   : [2],
    "no-undefined"                    : [2],
    // Change `args` to `"all"` locally to help cleaning dependency injection.
    "no-unused-vars"                  : [2, {"vars": "all", "args": "after-used"}],
    "no-use-before-define"            : [2],
    // Node.js and CommonJS
    // -----
    "callback-return"                 : [2, ["callback", "cb"]],
    "global-require"                  : [2],
    "handle-callback-err"             : [2, "^(e|err|error)$"],
    "no-buffer-constructor"           : [2],
    // Sorting by IDE instead of grouping.
    "no-mixed-requires"               : [0],
    "no-new-require"                  : [2],
    "no-path-concat"                  : [2],
    "no-process-env"                  : [2],
    "no-process-exit"                 : [2],
    "no-restricted-modules"           : [2],
    "no-sync"                         : [0],
    // Stylistic Issues
    // -----
    "array-bracket-newline"           : [2, {"multiline": true}],
    "array-bracket-spacing"           : [2, "never"],
    "array-element-newline"           : [2, {"multiline": true}],
    "block-spacing"                   : [2, "always"],
    "brace-style"                     : [2, "1tbs", {"allowSingleLine": true}],
    // Use `obj["prop"]` for predefined properties.
    "camelcase"                       : [2, {"properties": "always"}],
    "capitalized-comments"            : [0],
    "comma-dangle"                    : [2, "always-multiline"],
    "comma-spacing"                   : [2, {"before": false, "after": true}],
    "comma-style"                     : [2, "last", {"exceptions": {}}],
    "computed-property-spacing"       : [2, "never"],
    "consistent-this"                 : [1, "_this"],
    "eol-last"                        : [2],
    "func-call-spacing"               : [2, "never"],
    "func-name-matching"              : [0],
    "func-names"                      : [2, "as-needed"],
    "func-style"                      : [0],
    "function-paren-newline"          : [2, "multiline"],
    "id-blacklist"                    : [2, "err", "e", "cb", "callback"],
    "id-length"                       : [0],
    "id-match"                        : [0],
    "implicit-arrow-linebreak"        : [0],
    "indent"                          : [2, 2, {"SwitchCase": 1}],
    "jsx-quotes"                      : [2, "prefer-double"],
    "key-spacing"                     : [2, {"beforeColon": false, "afterColon": true, "align": "colon"}],
    "keyword-spacing"                 : [2, {"before": true, "after": true, "overrides": {}}],
    "line-comment-position"           : [0],
    // Leave this to Git.
    "linebreak-style"                 : [0],
    "lines-around-comment"            : [0],
    "lines-between-class-members"     : [2, "always", {"exceptAfterSingleLine": false}],
    "max-depth"                       : [1, {"max": 4}],
    "max-len"                         : [
      1, {
        "code"                  : 80,
        "ignoreComments"        : true,
        "ignoreStrings"         : true,
        "ignoreTemplateLiterals": true,
        "ignoreRegExpLiterals"  : true
      }
    ],
    "max-lines"                       : [1, {"max": 300, "skipBlankLines": true, "skipComments": true}],
    "max-nested-callbacks"            : [1, {"max": 10}],
    "max-params"                      : [1, {"max": 3}],
    "max-statements"                  : [1, 10, {"ignoreTopLevelFunctions": true}],
    "max-statements-per-line"         : [1, {"max": 1}],
    "multiline-comment-style"         : [0],
    "multiline-ternary"               : [2, "always-multiline"],
    "new-cap"                         : [1, {"capIsNew": true, "newIsCap": true, "properties": true}],
    "new-parens"                      : [2],
    "newline-per-chained-call"        : [1, {"ignoreChainWithDepth": 2}],
    "no-array-constructor"            : [2],
    "no-bitwise"                      : [2],
    "no-continue"                     : [2],
    "no-inline-comments"              : [0],
    "no-lonely-if"                    : [2],
    "no-mixed-operators"              : [2, {"allowSamePrecedence": true}],
    "no-mixed-spaces-and-tabs"        : [2],
    "no-multi-assign"                 : [2],
    // Use more than 3 empty lines to mark debug codes.
    "no-multiple-empty-lines"         : [2, {"max": 3, "maxEOF": 1}],
    "no-negated-condition"            : [1],
    "no-nested-ternary"               : [2],
    "no-new-object"                   : [2],
    "no-plusplus"                     : [2, {"allowForLoopAfterthoughts": false}],
    "no-restricted-syntax"            : [0],
    "no-tabs"                         : [2],
    "no-ternary"                      : [0],
    "no-trailing-spaces"              : [2],
    "no-underscore-dangle"            : [1, {"allowAfterThis": true, "allowAfterSuper": true}],
    "no-unneeded-ternary"             : [2],
    "no-whitespace-before-property"   : [2],
    // Nonblock statement is not allowed at all ;)
    "nonblock-statement-body-position": [0],
    "object-curly-newline"            : [2, {"multiline": true, "consistent": true}],
    "object-curly-spacing"            : [2, "always", {"arraysInObjects": false, "objectsInObjects": false}],
    "object-property-newline"         : [2, {"allowAllPropertiesOnSameLine": true}],
    "one-var"                         : [2, "never"],
    // No "one-var" at all ;)
    "one-var-declaration-per-line"    : [0],
    "operator-assignment"             : [2, "always"],
    "operator-linebreak"              : [2, "before"],
    "padded-blocks"                   : [0],
    "quote-props"                     : [2, "consistent"],
    "quotes"                          : [2, "single", "avoid-escape"],
    "require-jsdoc"                   : [0],
    "semi"                            : [2, "never"],
    "semi-spacing"                    : [2, {"before": false, "after": true}],
    "semi-style"                      : [2, "first"],
    "sort-keys"                       : [0],
    "sort-vars"                       : [0],
    "space-before-blocks"             : [2, "always"],
    "space-before-function-paren"     : [2, "never"],
    "space-in-parens"                 : [2, "never"],
    "space-infix-ops"                 : [2, {"int32Hint": true}],
    "space-unary-ops"                 : [2, {"words": true, "nonwords": false}],
    "spaced-comment"                  : [0],
    "switch-colon-spacing"            : [2, {"after": true, "before": false}],
    "template-tag-spacing"            : [2, "never"],
    "unicode-bom"                     : [2, "never"],
    "wrap-regex"                      : [0],
    // ECMAScript 6
    // -----
    "arrow-body-style"                : [2, "always"],
    "arrow-parens"                    : [2, "always"],
    "arrow-spacing"                   : [2],
    "constructor-super"               : [2],
    "generator-star-spacing"          : [2, "before"],
    "no-class-assign"                 : [2],
    "no-confusing-arrow"              : [2],
    "no-const-assign"                 : [2],
    "no-dupe-class-members"           : [2],
    "no-duplicate-imports"            : [2, {"includeExports": true}],
    "no-new-symbol"                   : [2],
    // Nothing to restrict yet.
    "no-restricted-imports"           : [0],
    "no-this-before-super"            : [2],
    "no-useless-computed-key"         : [2],
    "no-useless-constructor"          : [2],
    "no-useless-rename"               : [2],
    "no-var"                          : [2],
    "object-shorthand"                : [2, "always"],
    "prefer-arrow-callback"           : [0],
    "prefer-const"                    : [2],
    "prefer-destructuring"            : [0],
    "prefer-numeric-literals"         : [2],
    "prefer-rest-params"              : [2],
    "prefer-spread"                   : [2],
    "prefer-template"                 : [1],
    "require-yield"                   : [2],
    "rest-spread-spacing"             : [2],
    "sort-imports"                    : [1],
    "symbol-description"              : [2],
    "template-curly-spacing"          : [2, "never"],
    "yield-star-spacing"              : [2, "after"]
  },
  "globals"      : {},
  "root"         : true
}
